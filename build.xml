<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="help" name="ArabMorph">

	<target name="help" description="Displays help about avalaible targets.">
	 <echo>
	 ArabMorph build targets :
	 
	 Specify the target you want to execute :
	 compile : Compiles the source code.
	 jar : Creates the jar file.
	 zip : Creates a zip file containing the source files.
	 javadoc : Builds the javadocs.
	 site : Builds HTML documentation using Apache Forrest.	
	 clean : Cleans all build products.
	 help : Displays help about avalaible targets. 
	 </echo>	
	</target>
    
	<target name="init" description="Builds necessary directories.">        		
        <property name="dist" value="./build"/>		
		<property name="lucene.file" value="lucene-20030909"/>
		<property name="with.sources" value="true"/>
		<mkdir dir="${dist}"/>		
    </target>

    <target name="compile" depends="init"  description="Compiles the source code.">
		<mkdir dir="${dist}/src"/>
        <javac debug="true" deprecation="true" destdir="${dist}/src" srcdir="./src/java">            
            <classpath>
				<pathelement location="./lib/commons-collections.jar"/>
				<pathelement location="./lib/${lucene.file}.jar"/>
			</classpath>
        </javac>
    </target>

    <target name="jar" depends="init,compile" description="Creates the jar file.">
		<copy todir="${dist}/src">
			<fileset dir="./src/java">						  
				<exclude name="**/*.java" unless="with.sources"/>							
			</fileset>
		</copy>
        <jar basedir="${dist}/src" compress="true" jarfile="${dist}/ArabicAnalyzer.jar"/>		
	</target>
	
    <target name="zip" depends="init" description="Creates a zip file containing the source files.">
        <zip destfile="${dist}/ArabicAnalyzer-src.zip" duplicate="fail">			
			<fileset dir=".">
				<include name="*.*"/>
				<include name="src/java/**"/>
			</fileset>											
		</zip>
	</target>	

    <target name="javadoc" depends="init" description="Builds the javadocs." >        
        <javadoc destdir="${dist}/javadoc" packagenames="gpl.pierrick.brihaye.*">
            <sourcepath>
                <pathelement location="./src/java"/>
            </sourcepath>
            <classpath>
				<pathelement location="./lib/commons-collections.jar"/>
				<pathelement location="./lib/${lucene.file}.jar"/>
			</classpath>			
        </javadoc>
    </target>
	
	<target name="check_forrest" description="Checks whether Apache Forrest is available.">
		<!-- An opportunity to override default settings -->
		<property file="forrest.properties"/>
		<property environment="env"/>		
		<property name="forrest.home" value="${env.FORREST_HOME}"/>			
		<condition property="found.forrest">
			<isset property="env.FORREST_HOME"/>
		</condition>
		<fail unless="found.forrest">
		Unable to find Apache Forrest :
		
		set a FORREST_HOME environment variable
		or
		set a "forrest.home" property in "./forrest.properties"
		</fail>
	</target>
	
	 <target name="site" depends="check_forrest,init,javadoc" description="Builds HTML documentation using Apache Forrest." if="found.forrest">
		<property name="project.home" location="." />
		<property name="project.name" value="AraMorph"/>						
		<property name="project.build-dir" value="dist"/>				
		<delete dir="${dist}/site" failonerror="false"/>
		<mkdir dir="${dist}/site"/>
		<ant antfile="${forrest.home}/forrest.antproxy.xml" target="site"/>		
		<property name="html" value="${dist}/html"/>
		<mkdir dir="${html}/aramorph"/>
		<mkdir dir="${html}/aramorph/javadoc"/>
		<copy todir="${html}/aramorph" includeEmptyDirs="false">
			<fileset dir="${dist}/site"/>			
		</copy>
		<copy todir="${html}/aramorph/javadoc" includeEmptyDirs="false">
			<fileset dir="${dist}/javadoc"/>			
		</copy>	
		<!-- remove timestamp to avoid unwanted CVS diffs -->			
		<replaceregexp match="Generated by javadoc on (.*) --" replace="Generated by javadoc --" flags="g" byline="true">
			<fileset dir="${html}/aramorph/javadoc" includes="**/*.html" />
		</replaceregexp>				
    </target>

    <target name="clean" depends="init" description="Cleans all build products.">
        <delete dir="${dist}"/>
    </target>

</project>
